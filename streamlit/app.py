import streamlit as st
import requests
import logging


st.set_page_config(page_title="Formul√°rio de Previs√£o", layout="centered")
st.title("üìã Formul√°rio de Previs√£o")

# Campos categ√≥ricos
gender = st.selectbox("G√™nero", options=["Feminino", "Masculino"])
family_history = st.selectbox("Hist√≥rico Familiar de Obesidade?", options=["Sim", "N√£o"])
FAVC = st.selectbox("Consome alimentos com alto teor cal√≥rico frequentemente (FAVC)?", options=["Sim", "N√£o"])
FCVC = st.selectbox("Frequ√™ncia de consumo de vegetais?", options=["Sempre", "√Äs vezes", "N√£o"])
NCP = st.selectbox("N√∫mero de refei√ß√µes por dia (NCP)?", options=["1 Refei√ß√£o", "2 Refei√ß√µes", "3 Refei√ß√µes", "4 ou mais refei√ß√µes"])
CAEC = st.selectbox("Consome alimentos entre as refei√ß√µes (CAEC)?", options=["N√£o", "A vezes", "Frequentemente", "Sempre"])
SMOKE = st.selectbox("Fuma?", options=["N√£o", "Sim"])
CH2O = st.selectbox("Consumo di√°rio de √°gua?", options=["At√© 1 Litro", "Entre 1 a 2 Litros", "2 ou mais Litros"])
SCC = st.selectbox("Monitora calorias ingeridas (SCC)?", options=["N√£o", "Sim"])
FAF = st.selectbox("Frequ√™ncia de atividade f√≠sica (FAF)?", options=["0 a 1 dia", "2 a 3 dias", "4 a 5 dias", "Mais de 5 dias"])
CALC = st.selectbox("Frequ√™ncia de consumo de √°lcool?", options=["N√£o", "A vezes", "Frequentemente", "Sempre"])
MTRANS = st.selectbox("Meio de transporte predominante?", options=["Transporte P√∫blico", "Caminhada", "Autom√≥vel", "Motocicleta", "Bicicleta"])

# Campos num√©ricos
Age = st.number_input("Idade (anos)", min_value=0, max_value=120, value=25)
Height = st.number_input("Altura (em metros)", min_value=0.5, max_value=2.5, value=1.70, step=0.01)
Weight = st.number_input("Peso (em kg)", min_value=10.0, max_value=300.0, value=70.0, step=0.1)

# Bot√£o para enviar
if st.button("üîÆ Prever"):
    input_data = {
        "Gender": gender,
        "Age": Age,
        "Height": Height,
        "Weight": Weight,
        "family_history": family_history,
        "FAVC": FAVC,
        "FCVC": FCVC,
        "NCP": NCP,
        "CAEC": CAEC,
        "SMOKE": SMOKE,
        "CH2O": CH2O,
        "SCC": SCC,
        "FAF": FAF,
        "CALC": CALC,
        "MTRANS": MTRANS
    }

    try:
        response = requests.post("http://api:5000/predict", json=input_data)
        
        logging.info(input_data)

        if response.status_code == 200:
            result = response.json()
            st.success(f"Resultado da Previs√£o: **{result['data']['prediction']}**")
        else:
            st.error(f"Erro na predi√ß√£o: {response.status_code} - {response.text}")

    except requests.exceptions.ConnectionError:
        st.error("‚ùå N√£o foi poss√≠vel conectar √† API. Verifique se o servidor est√° online.")